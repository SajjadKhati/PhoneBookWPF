<Window x:Class="PhoneBook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validationRuleModule="clr-namespace:ViewModel.PhoneBookValidationRuleModule;assembly=ViewModel"
        xmlns:viewBindingConverter="clr-namespace:PhoneBook.ViewBindingConverter"
        xmlns:behavior ="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:PhoneBook"
        mc:Ignorable="d"
        Name="PhoneBookWindow" Title="دفترچه تلفن طلوع" MinHeight="450" MinWidth="900" MaxHeight="760" MaxWidth="1400" 
        SizeToContent="WidthAndHeight" FontFamily="Calibri" FontSize="17"
        Loaded="PhoneBookWindow_Loaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PhoneBookViewModel}">

    <Window.Resources>


        <CollectionViewSource x:Key="PeopleCollectionViewSourceKey" 
                              Source="{Binding Path=PhoneBook.People}"/>


        <CollectionViewSource x:Key="ProvinceCollectionViewSourceKey" 
            Source="{Binding Path=PhoneBook.Provinces}"/>


        <validationRuleModule:PersonValidationRule x:Key="PersonValidationRuleKey" ValidationStep="UpdatedValue"/>


        <viewBindingConverter:AlternationBackgroundConverter x:Key="GroupHeaderAlternationBackgroundConverterKey"
            BackgroundBrush="LightCyan" AlternationBackgroundBrush="LightSkyBlue"/>


        <viewBindingConverter:DataGridRowLiningUpConverter x:Key="DataGridRowLiningUpConverterKey"/>


        <viewBindingConverter:TextBlockVisibilityForAddressItemsConverter x:Key="TextBlockVisibilityForAddressItemsConverterKey"/>


        <viewBindingConverter:EditCityComboBoxEnableConverter x:Key="EditCityComboBoxEnableConverterKey"/>


        <viewBindingConverter:EditPostalCodeConverter x:Key="EditPostalCodeConverterKey"/>


        <viewBindingConverter:AddressItemNumberConverter x:Key="AddressItemNumberConverterKey"/>


        <ControlTemplate TargetType="{x:Type Control}" x:Key="DataGridRowValidationErrorControlTemplateKey">
            <Grid Margin="0,-2,0,-2" Background="Transparent"
                  ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors)[0].ErrorContent}">

                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" 
                    Height="{TemplateBinding FontSize}"/>
                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" 
                    Foreground="White" HorizontalAlignment="Center"  />
            </Grid>
        </ControlTemplate>


        <DataTemplate x:Key="ShowMobileItemDataTemplateKey">
            <Grid Margin="2">
                <TextBlock Margin="2, 0" Text="{Binding Path=MobileNumber}"/>
            </Grid>
        </DataTemplate>


        <DataTemplate x:Key="ShowMobileCollectionColumnCellDataTemplateKey">
            <ItemsControl ItemTemplate="{StaticResource ShowMobileItemDataTemplateKey}"
                AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Standard">

                <ItemsControl.Resources>
                    <!--  برای حالت نمایش ، حداقل در این نسخه ، نیازی به ساختن CollectionViewSource نیست و اگر نسازیم ، خودش ، یک CollectionView ی پیش فرض میسازد
                    و از آن استفاده میکند . فقط در حالت ویرایش فعلا به CollectionViewSource نیاز داریم . ولی بری حالت نمایش هم ساختیم .
                    -->
                    <CollectionViewSource x:Key="ShowingMobileCollectionViewSourceKey" 
                                          Source="{Binding Path=Mobiles}"/>
                </ItemsControl.Resources>

                <!--  چون دستور StaticResource ، فقط در المنت های پدرِ Visual جستجو میکنند ، یعنی در درخت Visual Tree جستجو میکنند ، 
                پس اگر MobileCollectionViewSourceKey را در DataTemplate تعریف کنیم ، چون المنتِ DataTemplate ، یک المنت بصری نیست و یک المنت منطقی هست ،
                پس عملیات StaticResource و در واقع عمل  Binding در کد زیر ، درست انجام نمیشود .
                -->
                <!--  همچنین اینکه برای پروپرتیِ ItemsSource در کد زیر ، دستور Binding را بکار بردیم و Binding انجام دادیم اما بجایش ، مستقیما از StaticResource استفاده نکردیم
                چون پروپرتیِ ItemsSource ، نوع IEnumerable را میخواهد در صورتی که شی مورد نظر مان یعنی شی MobileCollectionViewSourceKey ، 
                از نوع CollectionViewSource هست که رابط ItemsSource را پیاده سازی نمیکند . بلکه پروپرتیِ View در CollectionViewSource ، از نوع رابط
                ICollectionView هست که آن هم از رابط IEnumerable ارث بری میکند .
                
                اما وقتی از دستور Binding استفاده میکنیم ، موتورِ Binding ، اتوماتیک به پروپرتی پیش فرض اش که توسط اتریبیوتِ DefaultPropertyAttribute مشخص میشود ، 
                Binding را به آن پروپرتی انجام میدهد . در شیِ CollectionViewSource ، پروپرتی پیش فرض ، پروپرتیِ View هست .
                یعنی وقتی به شی ای از CollectionViewSource عمل Binding انجام میدهیم ، 
                موتور Binding ، به پروپرتیِ View در CollectionViewSource آن Binding را انجام میدهد .
                -->
                <ItemsControl.ItemsSource>
                    <Binding Source="{StaticResource ShowingMobileCollectionViewSourceKey}"/>
                </ItemsControl.ItemsSource>
            </ItemsControl>
        </DataTemplate>


        <DataTemplate x:Key="EditMobileItemDataTemplateKey">
            <DockPanel LastChildFill="True" Margin="2">

                <TextBox Text="{Binding Path=Id}" Visibility="Collapsed"/>
                <TextBox Margin="2, 2, 20, 2" MinWidth="130" HorizontalContentAlignment="Center"
                    Text="{Binding Path=MobileNumber}"/>

                <!--  پروپرتیِ Attached Property ئه ItemsControl.AlternationIndex ، درون شیِ ItemsControl
                قرار ندارد . بلکه در شیِ فرزندش که هر آیتم را نگه میدارد ، یعنی درون شیِ ContentPresenter قرار دارد .
                
                همچنین چون پروپرتیِ ItemsControl.AlternationIndex ، یک attached property هست ، موقع Binding کردن ، باید آنرا درون پرانتز قرار دهیم تا بشناسد .
                -->
                <Button DockPanel.Dock="Left" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20, 2, 2, 2" 
                    Padding="3, 2" Content="حذف شماره همراه" Click="MobileDeleteButton_Click" 
                    Tag="{Binding Mode=OneWay, 
                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, 
                    Path=(ItemsControl.AlternationIndex)}"/>
            </DockPanel>
        </DataTemplate>


        <DataTemplate x:Key="EditMobileCollectionColumnCellDataTemplateKey">
            <StackPanel Name="EditMobileCollectionColumnCellStackPanel">

                <StackPanel.Resources>
                    <CollectionViewSource x:Key="EditingMobileCollectionViewSourceKey" 
                        Source="{Binding Path=Mobiles}"/>
                </StackPanel.Resources>

                <Button HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0, 3" Padding="5, 2" Content="اضافه کردن"
                        Click="MobileAddButton_Click"/>

                <ItemsControl Name="MobilesItemsControl" 
                      ItemsSource="{Binding 
                        Source={StaticResource EditingMobileCollectionViewSourceKey}}"
                      ItemTemplate="{StaticResource EditMobileItemDataTemplateKey}"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Standard"
                      AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"/>
            </StackPanel>
        </DataTemplate>


        <DataTemplate x:Key="ShowAddressItemDataTemplateKey">
            <StackPanel Margin="2" Orientation="Horizontal">
                <TextBlock Margin="5, 0" Text="استان"/>
                <TextBlock Margin="5, 0" Text="{Binding Path=Province}"/>
                <TextBlock Margin="5, 0" Text="،  شهر"/>
                <TextBlock Margin="5, 0" Text="{Binding Path=City}"/>
            </StackPanel>
        </DataTemplate>


        <DataTemplate x:Key="ShowAddressCollectionColumnCellDataTemplateKey">
            <ItemsControl ItemTemplate="{StaticResource ShowAddressItemDataTemplateKey}"
                AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Standard">

                <ItemsControl.Resources>
                    <!--  برای حالت نمایش ، حداقل در این نسخه ، نیازی به ساختن CollectionViewSource نیست و اگر نسازیم ، خودش ، یک CollectionView ی پیش فرض میسازد
                    و از آن استفاده میکند . فقط در حالت ویرایش فعلا به CollectionViewSource نیاز داریم . ولی بری حالت نمایش هم ساختیم .
                    -->
                    <CollectionViewSource x:Key="ShowingAddressCollectionViewSourceKey" 
                        Source="{Binding Path=Addresses}"/>
                </ItemsControl.Resources>

                <ItemsControl.ItemsSource>
                    <Binding Source="{StaticResource ShowingAddressCollectionViewSourceKey}"/>
                </ItemsControl.ItemsSource>
            </ItemsControl>
        </DataTemplate>


        <DataTemplate x:Key="EditAddressItemDataTemplateKey">
            <DockPanel LastChildFill="True" Margin="2">

                <TextBox Text="{Binding Path=Id}" Visibility="Collapsed"/>

                <!--  در Binding ای که برای پروپرتیِ SelectedValue انجام شد ، چون DataContext ئه ComboBox ، از نوع یک آیتم از نوع Address هست ، 
                پس ، Source ئه Binding ای که برای پروپرتیِ SelectedValue انجام شد ، از نوع Address هست .
                اما Path  ئه این Binding ، به پروپرتیِ Province در شیِ Address متصل میشود . 
                
                اما نوعِ خودِ SelectedValue ، چون آیتم انتخاب شده هست ، و آیتم های ComboBox هم چون از پروپرتیِ ItemsSource مشخص میشوند و این پروپرتی هم -
                به شی ای از نوع کالکشن Province ، متصل شده ، پس ، نوع SelectedValue ، بصورت پیش فرض ، از نوع Province هست . 
                منظور از Province ، در واقع شی ای از نوع Model.PhoneBookModule.Class.Province هست ؛ نه پروپرتی موجود در کلاس Address .
                
                SelectedValuePath مشخص میکند که پروپرتیِ SelectedValue ، به چه نام ای از پروپرتی ، در Binding اش استفاده کند و به آن متصل شود .
                چون مقدار SelectedValuePath ، را "ProvinceName" گرفتیم ، در واقع SelectedValue ، دنبال پروپرتی ای بنام "ProvinceName" در شیِ -
                Model.PhoneBookModule.Class.Province میگردد و مقدار این پروپرتی را برای پروپرتی ای که به آن Binding بود ، یعنی به پروپرتیِ Address.Province ارسال میکند .
                
                در واقع ، پروپرتیِ SelectedValue ، به پروپرتیِ Address.Province ، متصل یا همان Binding میشود اما اگر مقدار SelectedValuePath را تعیین نمیکردیم ، برای -
                پروپرتیِ Address.Province ، شی ای از نوع آیتم های کمبوباکس ، یعنی شی ای از نوع Model.PhoneBookModule.Class.Province را ارسال میکرد .
                اما چون مقدار پروپرتیِ SelectedValuePath را روی ProvinceName گذاشتیم ، در شیِ آیتم اش ، یعنی در شیِ Model.PhoneBookModule.Class.Province ، -
                دنبال پروپرتیِ ProvinceName که از نوع رشته هست ، جستجو میکند و مقدار این پروپرتیِ ProvinceName را برای پروپرتیِ Address.Province ارسال میکند و -
                چون هم ProvinceName و هم Address.Province ، از نوع رشته هستند ، هیچ مشکلی پیش نمیاید .
                
                اما اگر پروپرتی SelectedValuePath را مشخص نمیکردیم ، باید برای Binding ئه SelectedValue، تبدیل انجام میدادیم .
                یعنی شیِ Model.PhoneBookModule.Class.Province را به رشته تبدیل میکردیم . یا در واقع نام استان را از این شی ، در متد ConvertBack ، استخراج میکردیم .
                البته موقع Convert نیاز به تبدیل ندارد .
                -->
                <StackPanel HorizontalAlignment="Left"  Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="استان  :"/>
                    <ComboBox Name="EditProvinceComboBox"  IsSynchronizedWithCurrentItem="False" Padding="10, 3" MinWidth="190"
                          ItemsSource="{Binding Mode=OneWay,
                            Source={StaticResource ProvinceCollectionViewSourceKey}}"
                          SelectedValuePath="ProvinceName"
                          SelectedValue="{Binding Mode=TwoWay, Path=Province}"
                          SelectionChanged="EditProvinceComboBox_SelectionChanged">
                        <!--<behavior:Interaction.Triggers>
                            <behavior:EventTrigger EventName="SelectionChanged">
                                <behavior:InvokeCommandAction 
                                    Command="{Binding 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}, 
                                    Path=PhoneBookViewModel.LoadCitiesByProvinceIdCommand}" 
                                    CommandParameter="{Binding Mode=OneWay, 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, 
                                    Path=SelectedItem.Id}"/>
                            </behavior:EventTrigger>
                        </behavior:Interaction.Triggers>-->

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=ProvinceName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="شهر  :"/>
                    <ComboBox IsSynchronizedWithCurrentItem="False" Padding="10, 3" MinWidth="160"
                        ItemsSource="{Binding Mode=OneWay, ElementName=EditProvinceComboBox, Path=SelectedItem.Cities}"
                        SelectedValuePath="CityName"
                        SelectedValue="{Binding Mode=TwoWay, Path=City}"
                        IsEnabled="{Binding Mode=OneWay, ElementName=EditProvinceComboBox, Path=SelectedItem, 
                            Converter={StaticResource EditCityComboBoxEnableConverterKey}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=CityName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left"  Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="جزئیات آدرس  :"/>
                    <TextBox Padding="5, 0" MinWidth="200" MaxWidth="300" TextWrapping="Wrap"
                        Text="{Binding Path=AddressDetail}"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="کد پستی  :"/>
                    <TextBox Padding="5, 0" MinWidth="120" HorizontalContentAlignment="Center" 
                        Text="{Binding  Path=PostalCode, 
                        Converter={StaticResource EditPostalCodeConverterKey}}"/>
                </StackPanel>

                <Button DockPanel.Dock="Left" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20, 2, 2, 2" 
                    Padding="3, 2" Content="حذف آدرس" Click="AddressDeleteButton_Click"
                    Tag="{Binding Mode=OneWay, 
                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, 
                    Path=(ItemsControl.AlternationIndex)}"/>
            </DockPanel>
        </DataTemplate>


        <DataTemplate x:Key="EditAddressCollectionColumnCellDataTemplateKey">
            <StackPanel Name="EditAddressCollectionColumnCellStackPanel">

                <StackPanel.Resources>
                    <CollectionViewSource x:Key="EditingAddressCollectionViewSourceKey" 
                        Source="{Binding Path=Addresses}"/>
                </StackPanel.Resources>

                <Button HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0, 3" Padding="5, 2" Content="اضافه کردن"
                        Click="AddressAddButton_Click"/>

                <ItemsControl Name="AddressesItemsControl"
                    ItemsSource="{Binding 
                    Source={StaticResource EditingAddressCollectionViewSourceKey}}"
                    ItemTemplate="{StaticResource EditAddressItemDataTemplateKey}"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Standard"
                    AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"/>
            </StackPanel>
        </DataTemplate>


        <DataTemplate x:Key="DataGridRowDetailsItemTemplateKey">
            <Border Name="DataGridRowDetailsItemBorder" Margin="0, 1"  BorderThickness="2" BorderBrush="Transparent" 
                Padding="5, 2" CornerRadius="5" Background="Transparent">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontWeight="Bold" Text="آدرس شماره "/>
                        <TextBlock FontWeight="Bold" 
                            Text="{Binding Mode=OneWay, 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentPresenter}}, 
                            Path=(ItemsControl.AlternationIndex), 
                            Converter={StaticResource AddressItemNumberConverterKey}}"/>
                        <TextBlock FontWeight="Bold" Text=" :"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontWeight="Bold" Margin="5, 0" Text="استان"/>
                        <TextBlock Margin="5, 0" Text="{Binding Path=Province}"/>
                        <TextBlock Margin="5, 0" Text="،  "/>
                        <TextBlock FontWeight="Bold" Margin="5, 0" Text="شهر"/>
                        <TextBlock Margin="5, 0" Text="{Binding Path=City}"/>
                        <TextBlock Margin="5, 0" Text="،  "
                            Visibility="{Binding Path=AddressDetail, 
                            Converter={StaticResource TextBlockVisibilityForAddressItemsConverterKey}}"/>
                        <TextBlock FontWeight="Bold" Margin="5, 0" Text="جزئیات آدرس :  "
                            Visibility="{Binding Path=AddressDetail, 
                            Converter={StaticResource TextBlockVisibilityForAddressItemsConverterKey}}"/>
                        <TextBlock Margin="5, 0" MaxWidth="750" TextWrapping="Wrap" Text="{Binding Path=AddressDetail}"/>
                        <TextBlock Margin="5, 0" Text="،  "
                            Visibility="{Binding Path=PostalCode, 
                            Converter={StaticResource TextBlockVisibilityForAddressItemsConverterKey}}"/>
                        <TextBlock FontWeight="Bold" Margin="5, 0" Text="کد پستی  :  "
                            Visibility="{Binding Path=PostalCode, 
                            Converter={StaticResource TextBlockVisibilityForAddressItemsConverterKey}}"/>
                        <TextBlock Margin="5, 0" Text="{Binding Path=PostalCode}"/>
                    </StackPanel>
                    
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <Trigger SourceName="DataGridRowDetailsItemBorder" Property="IsMouseOver" Value="True">
                    <Setter TargetName="DataGridRowDetailsItemBorder" Property="BorderBrush" Value="DeepSkyBlue"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <DataTemplate x:Key="DataGridRowDetailsTemplateKey">
            <ItemsControl Margin="30, 2"
                ItemsSource="{Binding Path=Addresses}"
                ItemTemplate="{StaticResource DataGridRowDetailsItemTemplateKey}"
                AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Standard"/>
        </DataTemplate>


    </Window.Resources>


    <Grid>
        <!--  مقدار Auto ، یعنی به قدری که اندازه ی محتوای آن هست ، باشد . مقدار ستاره (*) ، یعنی بقیه ی همه ی چیزی که جا هست ، باشد .
        -->
        <Grid.RowDefinitions>
            <RowDefinition Name="TitleBarRow" Height="Auto"/>
            <RowDefinition Name="ContentRow" Height="Auto"/>
            <RowDefinition Name="DataGridRow" Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="1" Name="OtherContentStackPanel" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Grid.Row="1" Content="Test" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="20, 2" Margin="20" 
                    Click="ButtonBase_Click"/>

            <ComboBox Grid.Row="1" Name="Combobox" Margin="0, 20" Padding="30, 5" HorizontalAlignment="Left" 
                      VerticalAlignment="Top" ItemsSource="{Binding Path=PhoneBook.People}"/>
        </StackPanel>


        <DataGrid Grid.Row="2" Name="PhoneBookDataGrid" Margin="5" AutoGenerateColumns="False" FlowDirection="RightToLeft"
              DataContext="{Binding Source={StaticResource PeopleCollectionViewSourceKey}}"
              ItemsSource="{Binding ValidatesOnExceptions=True}"
              RowValidationErrorTemplate="{StaticResource DataGridRowValidationErrorControlTemplateKey}"
              BeginningEdit="PhoneBookDataGrid_BeginningEdit" 
              RowEditEnding="PhoneBookDataGrid_RowEditEnding"
              AddingNewItem="PhoneBookDataGrid_AddingNewItem"
              PreviewKeyDown="PhoneBookDataGrid_PreviewKeyDown"
              ColumnWidth="Auto"
              
              VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Standard"
              AlternationCount="{Binding Count}"
              RowDetailsTemplate="{StaticResource DataGridRowDetailsTemplateKey}"
              SelectionChanged="PhoneBookDataGrid_SelectionChanged"
              Sorting="PhoneBookDataGrid_Sorting">

            <DataGrid.RowValidationRules>
                <StaticResource ResourceKey="PersonValidationRuleKey"/>
            </DataGrid.RowValidationRules>

            <DataGrid.GroupStyle>
                <!--   اول اینکه استایل هایی که برای DataGrid.GroupStyle تعریف میشود ، باید بصورت inline باشد .
            یعنی باید همینجا تعریف شود و نباید درون Resource ها تعریف شود . چون در توضیح این پروپرتی نوشته هست .
            
            دوما شیِ این پروپرتی ، DataContext اش را از DataGrid نمیگیره .
            یعنی تمام استایل های زیر مجموعه اش ، از یه شیِ دیگه به عنوان Data Context استفاده میکنند .
            احتمالا شیِ کلاس collectionviewgroupinternal هست .
            
            سوما مقدار Text ئه TextBlock را که به پروپرتیِ Name بایندینگ کردیم ، این پروپرتیِ Name ، پروپرتی ای تعریف شده 
            در همین کلاس collectionviewgroupinternal هست که مقدار مربوط به گروه بندی ای 
            که پیدا کرده را برای هر گروهِ پیدا شده ، برمیگرداند .
            -->
                <GroupStyle AlternationCount="2">
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">

                                        <Expander Margin="2, 5" Background="{TemplateBinding ItemsControl.AlternationCount, 
                                            Converter={StaticResource GroupHeaderAlternationBackgroundConverterKey}}" 
                                            IsExpanded="True" BorderBrush="DeepSkyBlue" BorderThickness="2">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" Margin="2, 0"/>
                                                    <TextBlock Text="|" Margin="12, 0"/>
                                                    <TextBlock Text="تعداد اعضای این گروه  :" Margin="2, 0"/>
                                                    <TextBlock Text="{Binding Path=ItemCount}" Margin="2, 0"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <!--  برای ایجاد Control Template برای سطرها ، در استایلِ DataGridRow ، پروپرتیِ Template را مقدار دهید .
            در لینک زیر ، در استایلِ DataGridRow ، بخش Template اش را ببینید .
            https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/datagrid-styles-and-templates?view=netframeworkdesktop-4.8#datagridrow-parts
            -->
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="ردیف" IsReadOnly="True" MinWidth="50"
                    Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=AlternationIndex, 
                    Converter={StaticResource DataGridRowLiningUpConverterKey}}"/>

                <DataGridTextColumn Header="شناسه" Binding="{Binding Path=Id, ValidatesOnExceptions=True}" Visibility="Collapsed"/>

                <DataGridTextColumn Header="نام" Binding="{Binding Path=FirstName, ValidatesOnExceptions=True}" MinWidth="100"/>

                <DataGridTextColumn Header="نام خانوادگی" Binding="{Binding Path=LastName, ValidatesOnExceptions=True}" MinWidth="150"/>

                <DataGridTemplateColumn Header="شماره همراه" x:Name="MobileColumn" MinWidth="150"
                    SortMemberPath="Mobiles[0].MobileNumber"
                    CellTemplate="{StaticResource ShowMobileCollectionColumnCellDataTemplateKey}"
                    CellEditingTemplate="{StaticResource EditMobileCollectionColumnCellDataTemplateKey}"/>

                <DataGridTemplateColumn Header="آدرس" x:Name="AddressColumn" MinWidth="350" Width="*"
                    SortMemberPath="Addresses[0].Province"
                    CellTemplate="{StaticResource ShowAddressCollectionColumnCellDataTemplateKey}"
                    CellEditingTemplate="{StaticResource EditAddressCollectionColumnCellDataTemplateKey}"/>
            </DataGrid.Columns>

        </DataGrid>



    </Grid>
</Window>
