<Window x:Class="PhoneBook.Window.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behavior ="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:customControls ="clr-namespace:PoshtibangirTolo.View.CustomControl"
        xmlns:userControl="clr-namespace:PoshtibangirTolo.View.UserControls"
        xmlns:local="clr-namespace:PhoneBook"
        mc:Ignorable="d"
        Name="PhoneBookWindow" Title="دفترچه تلفن طلوع" MinHeight="450" MinWidth="900" MaxHeight="815" MaxWidth="1500" 
        SizeToContent="WidthAndHeight" WindowStyle="None" Loaded="PhoneBookWindow_Loaded"
        Style="{DynamicResource {x:Type Window}}" Icon="{StaticResource WindowIconDrawingImage}"
        DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PhoneBookViewModel}">
    <!--   در خط بالا ، Style ئه ویندوز را DynamicResource گذاشتیم چون اگه بعدا در زمان اجرا ، استایلِ Window تغییر کرد ، 
    یعنی مثلا به استایلِ Light تغییر کرد ، مقدارِ استایلِ ویندوزمون هم اتوماتیک تغییر کنه .
    همچنین چون موقع تعریف استایل ، استایل را از نوع MainWindow نگرفتیم و از نوع Window گرفتیم ، مجبوریم که صریحا در خط بالا ، پروپرتیِ Style ئه MainWindow مون را مقداردهی کنیم .   -->

    <Window.Resources>


        <CollectionViewSource x:Key="PeopleCollectionViewSourceKey" 
            Source="{Binding Path=PhoneBook.People}"/>


        <CollectionViewSource x:Key="ProvinceCollectionViewSourceKey" 
            Source="{Binding Path=PhoneBook.Provinces}"/>


        <DataTemplate x:Key="EditMobileItemDataTemplateKey">
            <DockPanel LastChildFill="True" Margin="2">

                <TextBox Text="{Binding Path=Id}" Visibility="Collapsed"/>
                <TextBox Margin="2, 2, 20, 2" MinWidth="130" HorizontalContentAlignment="Center"
                    Text="{Binding Path=MobileNumber}"/>

                <!--  پروپرتیِ Attached Property ئه ItemsControl.AlternationIndex ، درون شیِ ItemsControl
                قرار ندارد . بلکه در شیِ فرزندش که هر آیتم را نگه میدارد ، یعنی درون شیِ ContentPresenter قرار دارد .
                
                همچنین چون پروپرتیِ ItemsControl.AlternationIndex ، یک attached property هست ، موقع Binding کردن ، باید آنرا درون پرانتز قرار دهیم تا بشناسد .
                -->
                <customControls:ShapeTextButton DockPanel.Dock="Left" HorizontalAlignment="Right" VerticalAlignment="Center" 
                    Margin="20, 2, 2, 2" Padding="15, 5" Content="حذف شماره همراه" Click="MobileDeleteButton_Click" 
                    Tag="{Binding Mode=OneWay, 
                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, 
                    Path=(ItemsControl.AlternationIndex)}"
                    DefaultButtonShape="{StaticResource DeleteMobileBevelShape}"
                    MouseEnterButtonShape="{StaticResource DeleteMobileBevelShape}"
                    MouseDownButtonShape="{StaticResource DeleteMobileBevelShape}"
                    ControlDisabledButtonShape="{StaticResource DeleteMobileBevelShape}"
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"/>
            </DockPanel>
        </DataTemplate>


        <DataTemplate x:Key="EditMobileCollectionColumnCellDataTemplateKey">
            <StackPanel Name="EditMobileCollectionColumnCellStackPanel">

                <StackPanel.Resources>
                    <CollectionViewSource x:Key="EditingMobileCollectionViewSourceKey" 
                        Source="{Binding Path=Mobiles}"/>
                </StackPanel.Resources>

                <customControls:ShapeTextButton Margin="0, 3" Padding="15, 5" Content="اضافه کردن"
                    HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top"
                    DefaultButtonShape="{StaticResource AddMobileBevelShape}"
                    MouseEnterButtonShape="{StaticResource AddMobileBevelShape}"
                    MouseDownButtonShape="{StaticResource AddMobileBevelShape}"
                    ControlDisabledButtonShape="{StaticResource AddMobileBevelShape}"
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                    Command="{Binding Source={StaticResource CollectionViewOperationsKey},
                    Path= AddItemToCollectionViewCommand}"
                    CommandParameter="{Binding 
                    Source={StaticResource EditingMobileCollectionViewSourceKey}}"/>

                <ItemsControl Name="MobilesItemsControl" 
                      ItemsSource="{Binding 
                        Source={StaticResource EditingMobileCollectionViewSourceKey}}"
                      ItemTemplate="{StaticResource EditMobileItemDataTemplateKey}"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Standard"
                      AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"/>
            </StackPanel>
        </DataTemplate>


        <DataTemplate x:Key="EditAddressItemDataTemplateKey">
            <DockPanel LastChildFill="True" Margin="2">

                <TextBox Text="{Binding Path=Id}" Visibility="Collapsed"/>

                <!--  در Binding ای که برای پروپرتیِ SelectedValue انجام شد ، چون DataContext ئه ComboBox ، از نوع یک آیتم از نوع Address هست ، 
                پس ، Source ئه Binding ای که برای پروپرتیِ SelectedValue انجام شد ، از نوع Address هست .
                اما Path  ئه این Binding ، به پروپرتیِ Province در شیِ Address متصل میشود . 
                
                اما نوعِ خودِ SelectedValue ، چون آیتم انتخاب شده هست ، و آیتم های ComboBox هم چون از پروپرتیِ ItemsSource مشخص میشوند و این پروپرتی هم -
                به شی ای از نوع کالکشن Province ، متصل شده ، پس ، نوع SelectedValue ، بصورت پیش فرض ، از نوع Province هست . 
                منظور از Province ، در واقع شی ای از نوع Model.PhoneBookModule.Class.Province هست ؛ نه پروپرتی موجود در کلاس Address .
                
                SelectedValuePath مشخص میکند که پروپرتیِ SelectedValue ، به چه نام ای از پروپرتی ، در Binding اش استفاده کند و به آن متصل شود .
                چون مقدار SelectedValuePath ، را "ProvinceName" گرفتیم ، در واقع SelectedValue ، دنبال پروپرتی ای بنام "ProvinceName" در شیِ -
                Model.PhoneBookModule.Class.Province میگردد و مقدار این پروپرتی را برای پروپرتی ای که به آن Binding بود ، یعنی به پروپرتیِ Address.Province ارسال میکند .
                
                در واقع ، پروپرتیِ SelectedValue ، به پروپرتیِ Address.Province ، متصل یا همان Binding میشود اما اگر مقدار SelectedValuePath را تعیین نمیکردیم ، برای -
                پروپرتیِ Address.Province ، شی ای از نوع آیتم های کمبوباکس ، یعنی شی ای از نوع Model.PhoneBookModule.Class.Province را ارسال میکرد .
                اما چون مقدار پروپرتیِ SelectedValuePath را روی ProvinceName گذاشتیم ، در شیِ آیتم اش ، یعنی در شیِ Model.PhoneBookModule.Class.Province ، -
                دنبال پروپرتیِ ProvinceName که از نوع رشته هست ، جستجو میکند و مقدار این پروپرتیِ ProvinceName را برای پروپرتیِ Address.Province ارسال میکند و -
                چون هم ProvinceName و هم Address.Province ، از نوع رشته هستند ، هیچ مشکلی پیش نمیاید .
                
                اما اگر پروپرتی SelectedValuePath را مشخص نمیکردیم ، باید برای Binding ئه SelectedValue، تبدیل انجام میدادیم .
                یعنی شیِ Model.PhoneBookModule.Class.Province را به رشته تبدیل میکردیم . یا در واقع نام استان را از این شی ، در متد ConvertBack ، استخراج میکردیم .
                البته موقع Convert نیاز به تبدیل ندارد .
                -->
                <StackPanel HorizontalAlignment="Left"  Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="استان  :" Style="{DynamicResource TextBlockStyleKey}"/>
                    <ComboBox Name="EditProvinceComboBox"  IsSynchronizedWithCurrentItem="False" Padding="10, 3" MinWidth="190"
                          ItemsSource="{Binding Mode=OneWay,
                            Source={StaticResource ProvinceCollectionViewSourceKey}}"
                          SelectedValuePath="ProvinceName"
                          SelectedValue="{Binding Mode=TwoWay, Path=Province}"
                          SelectionChanged="EditProvinceComboBox_SelectionChanged">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=ProvinceName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="شهر  :" Style="{DynamicResource TextBlockStyleKey}"/>
                    <ComboBox IsSynchronizedWithCurrentItem="False" Padding="10, 3" MinWidth="160"
                        ItemsSource="{Binding Mode=OneWay, ElementName=EditProvinceComboBox, Path=SelectedItem.Cities}"
                        SelectedValuePath="CityName"
                        SelectedValue="{Binding Mode=TwoWay, Path=City}"
                        IsEnabled="{Binding Mode=OneWay, ElementName=EditProvinceComboBox, Path=SelectedItem, 
                            Converter={StaticResource EditCityComboBoxEnableConverterKey}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=CityName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left"  Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="جزئیات آدرس  :" Style="{DynamicResource TextBlockStyleKey}"/>
                    <TextBox Padding="5, 0" MinWidth="200" MaxWidth="300" TextWrapping="Wrap"
                        Text="{Binding Path=AddressDetail}"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Margin="5, 0">
                    <TextBlock Margin="5, 0" Text="کد پستی  :" Style="{DynamicResource TextBlockStyleKey}"/>
                    <TextBox Padding="5, 0" MinWidth="120" HorizontalContentAlignment="Center" 
                        Text="{Binding  Path=PostalCode, 
                        Converter={StaticResource EditPostalCodeConverterKey}}"/>
                </StackPanel>

                <customControls:ShapeTextButton DockPanel.Dock="Left" HorizontalAlignment="Right" VerticalAlignment="Center" 
                    Margin="20, 2, 2, 2" Padding="15, 5" Content="حذف آدرس" Click="AddressDeleteButton_Click"
                    DefaultButtonShape="{StaticResource DeleteAddressBevelShape}"
                    MouseEnterButtonShape="{StaticResource DeleteAddressBevelShape}"
                    MouseDownButtonShape="{StaticResource DeleteAddressBevelShape}"
                    ControlDisabledButtonShape="{StaticResource DeleteAddressBevelShape}"
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                    Tag="{Binding Mode=OneWay, 
                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, 
                    Path=(ItemsControl.AlternationIndex)}"/>
            </DockPanel>
        </DataTemplate>


        <DataTemplate x:Key="EditAddressCollectionColumnCellDataTemplateKey">
            <StackPanel Name="EditAddressCollectionColumnCellStackPanel">

                <StackPanel.Resources>
                    <CollectionViewSource x:Key="EditingAddressCollectionViewSourceKey" 
                        Source="{Binding Path=Addresses}"/>
                </StackPanel.Resources>

                <customControls:ShapeTextButton HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0, 3" 
                    Padding="15, 5" Content="اضافه کردن"
                    DefaultButtonShape="{StaticResource AddAddressBevelShape}"
                    MouseEnterButtonShape="{StaticResource AddAddressBevelShape}"
                    MouseDownButtonShape="{StaticResource AddAddressBevelShape}"
                    ControlDisabledButtonShape="{StaticResource AddAddressBevelShape}"
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                    Command="{Binding Source={StaticResource CollectionViewOperationsKey},
                    Path= AddItemToCollectionViewCommand}"
                    CommandParameter="{Binding 
                    Source={StaticResource EditingAddressCollectionViewSourceKey}}"/>

                <ItemsControl Name="AddressesItemsControl"
                    ItemsSource="{Binding 
                    Source={StaticResource EditingAddressCollectionViewSourceKey}}"
                    ItemTemplate="{StaticResource EditAddressItemDataTemplateKey}"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Standard"
                    AlternationCount="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"/>
            </StackPanel>
        </DataTemplate>


    </Window.Resources>


    <!--  در نسخه ی Visual Studio 2022 ، نمیدونم چرا فقط استایلِ Window ، اون هم فقط در xaml disigner ، سِت و تنظیم نمیشه .
    
              برای اینکه زمانی که استایلِ یک کنترلی ، زمان xaml designer یا همون در زمان طراحی کار نمیکنه و -
              بخوایم فقط استایلِ زمانِ طراحیِ اون کنترل را به دلخواه خودمون تغییر بدیم ، مثلا استایلی را برای کنترل Window -
              اون هم فقط در زمان طراحی در xaml ، تغییر بدیم ، باید از پروپرتیِ زیر استفاده کنیم :
    
              <d:DesignerProperties.DesignStyle>
    
              نکات :
              - این پروپرتی ، در مایکروسافت سندش موجود نیست و اطلاعاتی در این باره نوشته نیست .
    
              - تاثیرش ، فقط در زمان طراحی یا همون xaml designer هست . یعنی زمان اجرای برنامه ، تاثیری نداره .
    
              - این پروپرتی را نمیشه در فایل هایی که استایل ها را تعریف کردیم ، مثلا در DarkStyle.xaml یا حتی در App.xaml تعریف کنیم . -
              حتما باید برای هر Window و درون فایلِ xaml ای که برای هر Window تعریف میکنیم ، تعریف کنیم . مثلا در همین فایل و در همینجا . -
              یعنی برای هر Window ای که تعریف میکنیم ، باید برای هر کدوم شون ، این پروپرتی را مجزا مقداردهی کنیم .
    
              - این پروپرتی شاید فقط برای نوع Window بکار بره . شاید برای کنترل های دیگه بکار نره . دقیقا نمیدونم .
    -->
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="{x:Type Window}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Background" Value="#FF2D2D2D"/>
        </Style>
    </d:DesignerProperties.DesignStyle>


    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="3"/>
    </WindowChrome.WindowChrome>


    <Grid>
        <!--  مقدار Auto ، یعنی به قدری که اندازه ی محتوای آن هست ، باشد . مقدار ستاره (*) ، یعنی بقیه ی همه ی چیزی که جا هست ، باشد .
        -->
        <Grid.RowDefinitions>
            <RowDefinition Name="TitleBarRow" Height="Auto"/>
            <RowDefinition Name="ContentRow" Height="Auto"/>
            <RowDefinition Name="DataGridRow" Height="*"/>
        </Grid.RowDefinitions>


        <userControl:TitleBarUserControl Grid.Row="0" x:Name="TitleBarUserControl"
            TitleBarMainIconGeometry="{StaticResource PhoneBookGeometry}">

            <userControl:TitleBarUserControl.TitleBarAddControls>
                <customControls:ShapeTextButton Tag="CloseButton" DockPanel.Dock="Right" Margin="0, 8, 10, 8" 
                    DefaultButtonShape="{StaticResource CloseShape}"
                    MouseEnterButtonShape="{StaticResource CloseShape}"
                    MouseDownButtonShape="{StaticResource CloseShape}"
                    ControlDisabledButtonShape="{StaticResource CloseShape}" 
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                    Click="CloseButton_Click"/>

                <customControls:ShapeTextButton Tag="MinimizeButton" DockPanel.Dock="Right" Margin="0, 8, 10, 8" 
                    DefaultButtonShape="{StaticResource MinimizeShape}"
                    MouseEnterButtonShape="{StaticResource MinimizeShape}"
                    MouseDownButtonShape="{StaticResource MinimizeShape}"
                    ControlDisabledButtonShape="{StaticResource MinimizeShape}" 
                    GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                    Click="MinimizeButton_Click"/>

                <Border BorderThickness="0, 0, 1, 0" BorderBrush="LightGray" DockPanel.Dock="Right" 
                    Margin="0, 8, 10, 8"  />

                <customControls:ShapeTextButton Tag="SettingButton" DockPanel.Dock="Right" Margin="0, 8, 10, 8" 
                    DefaultButtonShape="{StaticResource SettingShape}"
                    MouseEnterButtonShape="{StaticResource SettingShape}"
                    MouseDownButtonShape="{StaticResource SettingShape}"
                    ControlDisabledButtonShape="{StaticResource SettingShape}" 
                    GetContentBrush_ForWhichButtonShapeProperty="Fill"
                    Click="SettingButton_Click"/>

            </userControl:TitleBarUserControl.TitleBarAddControls>

        </userControl:TitleBarUserControl>


        <Grid Grid.Row="1" FlowDirection="RightToLeft" Margin="5, 20">
            <Grid.RowDefinitions>
                <RowDefinition Name="SearchButtonRow" Height="Auto"/>
                <RowDefinition Name="SearchAndGroupingRow" Height="Auto"/>
                <RowDefinition Name="CollapseButtonRow" Height="Auto"/>
            </Grid.RowDefinitions>

            <customControls:ShapeTextButton Grid.Row="0" x:Name="SearchButton" HorizontalAlignment="Left" VerticalAlignment="Center" 
                Margin="0, 5" Padding="15, 5" Content="جستجو" 
                DefaultButtonShape="{StaticResource SearchBevelShape}"
                MouseEnterButtonShape="{StaticResource SearchBevelShape}"
                MouseDownButtonShape="{StaticResource SearchBevelShape}"
                ControlDisabledButtonShape="{StaticResource SearchBevelShape}"
                GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                Click="SearchButton_Click"/>

            <Border Name="SearchAndGroupingBorder" Grid.Row="1" BorderThickness="1" BorderBrush="DeepSkyBlue" 
                CornerRadius="5" Padding="5, 10" Visibility="Collapsed">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Name="SearchingRow"/>
                        <RowDefinition Name="GroupingRow"/>
                    </Grid.RowDefinitions>

                    <WrapPanel Grid.Row="0" Margin="0, 10">
                        <StackPanel Margin="10, 10">
                            <TextBlock Text="نام  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26" 
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterFirstName}"
                        TextChanged="FilterFirstNameTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="نام خانوادگی  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterLastName}"
                        TextChanged="FilterLastNameTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="شماره همراه  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterMobileNumber}"
                        TextChanged="FilterMobileNumbersTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="استان  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterProvince}"
                        TextChanged="FilterProvincesTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="شهر  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterCity}"
                        TextChanged="FilterCitiesTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="جزئیات آدرس  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterAddressDetail}"
                        TextChanged="FilterAddressDetailsTextBox_TextChanged"/>
                        </StackPanel>

                        <StackPanel Margin="10, 10">
                            <TextBlock Text="کد پستی  :" Style="{DynamicResource TextBlockStyleKey}"/>
                            <TextBox Margin="0, 10, 0, 0" MinWidth="100" MinHeight="26"
                        Text="{Binding Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, 
                        Source={StaticResource CollectionViewOperationsKey},
                        Path=FilterPostalCode}"
                        TextChanged="FilterPostalCodesTextBox_TextChanged"/>
                        </StackPanel>
                    </WrapPanel>

                    <StackPanel Grid.Row="1" Margin="0, 0">
                        <TextBlock Text="گروه بندی ستون  :" Style="{DynamicResource TextBlockStyleKey}"/>
                        <ComboBox Margin="0, 10, 0, 0" HorizontalAlignment="Left" MinWidth="200" MinHeight="26"
                    ItemsSource="{StaticResource GroupingComboBoxSourceArrayKey}"
                    SelectedItem="{Binding Mode=OneWayToSource, Source={StaticResource CollectionViewOperationsKey},
                    Path=GroupingProperty, 
                    Converter={StaticResource PersonGroupingPropertyConverterKey}}">

                            <behavior:Interaction.Triggers>
                                <behavior:EventTrigger EventName="SelectionChanged">
                                    <behavior:InvokeCommandAction 
                                Command="{Binding Source={StaticResource CollectionViewOperationsKey}, 
                                Path= PersonGroupingCommand}" 
                                CommandParameter="{Binding Mode=OneWay, 
                                Source={StaticResource PeopleCollectionViewSourceKey}}"/>
                                </behavior:EventTrigger>
                            </behavior:Interaction.Triggers>

                        </ComboBox>
                    </StackPanel>

                </Grid>
            </Border>

            <customControls:ShapeTextButton Grid.Row="2" x:Name="CollapseButton" Margin="0, 10, 0, 5" 
                HorizontalAlignment="Left" Visibility="Collapsed"
                DefaultButtonShape="{StaticResource CollapseBevelShape}"
                MouseEnterButtonShape="{StaticResource CollapseBevelShape}"
                MouseDownButtonShape="{StaticResource CollapseBevelShape}"
                ControlDisabledButtonShape="{StaticResource CollapseBevelShape}"
                GetContentBrush_ForWhichButtonShapeProperty="Stroke"
                Click="CollapseButton_Click"/>
        </Grid>


        <DataGrid Grid.Row="2" Name="PhoneBookDataGrid" Margin="5" AutoGenerateColumns="False" FlowDirection="RightToLeft"
              DataContext="{Binding Source={StaticResource PeopleCollectionViewSourceKey}}"
              ItemsSource="{Binding ValidatesOnExceptions=True}"
              RowValidationErrorTemplate="{StaticResource DataGridRowValidationErrorControlTemplateKey}"
              BeginningEdit="PhoneBookDataGrid_BeginningEdit" RowEditEnding="PhoneBookDataGrid_RowEditEnding"
              AddingNewItem="PhoneBookDataGrid_AddingNewItem" PreviewKeyDown="PhoneBookDataGrid_PreviewKeyDown"
              ColumnWidth="Auto"
              
              AlternationCount="{Binding Count}"
              RowDetailsTemplate="{StaticResource DataGridRowDetailsTemplateKey}"
              SelectionChanged="PhoneBookDataGrid_SelectionChanged" Sorting="PhoneBookDataGrid_Sorting">

            <!--  چون فقط میخواهیم آیتمی به کالکشن RowValidationRules اضافه کنیم و این پروپرتی ، یک پروپرتیِ فقط خواندنی هست ، 
            باید به این شیوه ، StaticResource اش  را مشخص کنیم .
            -->
            <DataGrid.RowValidationRules>
                <StaticResource ResourceKey="PersonValidationRuleKey"/>
            </DataGrid.RowValidationRules>


            <DataGrid.GroupStyle>
                <!--   اول اینکه استایل هایی که برای DataGrid.GroupStyle تعریف میشود ، باید بصورت inline باشد .
            یعنی باید همینجا تعریف شود و نباید درون Resource ها تعریف شود . چون در توضیح این پروپرتی نوشته هست .
            
            دوما شیِ این پروپرتی ، DataContext اش را از DataGrid نمیگیره .
            یعنی تمام استایل های زیر مجموعه اش ، از یه شیِ دیگه به عنوان Data Context استفاده میکنند .
            احتمالا شیِ کلاس collectionviewgroupinternal هست .
            
            سوما مقدار Text ئه TextBlock را که به پروپرتیِ Name بایندینگ کردیم ، این پروپرتیِ Name ، پروپرتی ای تعریف شده 
            در همین کلاس collectionviewgroupinternal هست که مقدار مربوط به گروه بندی ای 
            که پیدا کرده را برای هر گروهِ پیدا شده ، برمیگرداند .
            -->
                <GroupStyle AlternationCount="2">
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">

                                        <Expander Margin="2, 5" Background="{TemplateBinding ItemsControl.AlternationCount, 
                                            Converter={StaticResource GroupHeaderAlternationBackgroundConverterKey}}" 
                                            IsExpanded="True" BorderBrush="DeepSkyBlue" BorderThickness="2">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" Margin="2, 0" />
                                                    <TextBlock Text="|" Margin="12, 0"/>
                                                    <TextBlock Text="تعداد اعضای این گروه  :" Margin="2, 0" />
                                                    <TextBlock Text="{Binding Path=ItemCount}" Margin="2, 0"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter TextBlock.Foreground="{StaticResource DataGrid_GroupContentBrush}"/>
                                            </Expander.Content>
                                        </Expander>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>


            <DataGrid.Columns>
                <DataGridTextColumn Header="ردیف" IsReadOnly="True" MinWidth="50"
                    Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=AlternationIndex, 
                    Converter={StaticResource DataGridRowLiningUpConverterKey}}"/>

                <DataGridTextColumn Header="شناسه" Binding="{Binding Path=Id, ValidatesOnExceptions=True}" Visibility="Collapsed"/>

                <DataGridTextColumn Header="نام" Binding="{Binding Path=FirstName, ValidatesOnExceptions=True}" MinWidth="100"/>

                <DataGridTextColumn Header="نام خانوادگی" Binding="{Binding Path=LastName, ValidatesOnExceptions=True}" MinWidth="150"/>

                <DataGridTemplateColumn Header="شماره همراه" x:Name="MobileColumn" MinWidth="150"
                    SortMemberPath="Mobiles[0].MobileNumber"
                    CellTemplate="{StaticResource ShowMobileCollectionColumnCellDataTemplateKey}"
                    CellEditingTemplate="{StaticResource EditMobileCollectionColumnCellDataTemplateKey}"
                    CellStyle="{StaticResource MobileColumnCellStyleKey}"/>

                <DataGridTemplateColumn Header="آدرس" x:Name="AddressColumn" MinWidth="350" Width="*"
                    SortMemberPath="Addresses[0].Province"
                    CellTemplate="{StaticResource ShowAddressCollectionColumnCellDataTemplateKey}"
                    CellEditingTemplate="{StaticResource EditAddressCollectionColumnCellDataTemplateKey}"/>
            </DataGrid.Columns>

        </DataGrid>



    </Grid>


</Window>
